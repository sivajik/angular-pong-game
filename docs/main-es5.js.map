{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/classes/number-slider/cell.ts","webpack:///src/app/classes/pong/Ball.ts","webpack:///src/app/classes/pong/Bat.ts","webpack:///src/app/classes/pong/Movable.ts","webpack:///src/app/classes/pong/PongGame.ts","webpack:///src/app/classes/pong/Speed.ts","webpack:///src/app/cv/cv.component.ts","webpack:///src/app/cv/cv.component.html","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.html","webpack:///src/app/image-slider/image-slider.component.ts","webpack:///src/app/image-slider/image-slider.component.html","webpack:///src/app/number-slider/number-slider.component.ts","webpack:///src/app/number-slider/number-slider.component.html","webpack:///src/app/pong/pong.component.ts","webpack:///src/app/pong/pong.component.html","webpack:///src/app/tetris/tetris.component.ts","webpack:///src/app/tetris/tetris.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","forRoot","enableTracing","declarations","imports","providers","bootstrap","Cell","row","col","value","show","Ball","width","height","location","moveIncrement","speed","horiSpeedSprintValue","vertSpeedSprintValue","speedVal","Bat","ratioChange","Math","min","max","Movable","xCoOrd","yCoOrd","newHeigt","left","right","top","bottom","PongGame","ball","bat","keyPressedState","move","paddleBounds","getCollisionBoundaries","upKeyPressed","goUp","downKeyPressed","goDown","boundaries","checkCollided","ballBounds","goOppToCurrentY","batBounds","goOppToCurrentX","vsr","getLocationOnCanvas","setNewSpeed","ballBoundries","Speed","CvComponent","HomepageComponent","INITIAL_BOARD_SIZE","ImageSliderComponent","board","parts","boardDimension","split","img","Image","src","ctx","canvasElem","nativeElement","getContext","console","log","w2","h2","i","x","y","drawImage","push","toDataURL","slicedImage","document","createElement","div","getElementById","appendChild","DUMMY","NumberSliderComponent","totalClicks","fillBoard","numberArray","Array","shuffle","count","j","array","tmp","current","length","floor","random","currentCellValue","alert","isGameCompleted","gameCompleted","boardSize","boardSizeChanged","ADULT_BAT_HEIGHT","KIDS_BAT_HEIGHT","CANVAS_WIDTH","CANVAS_HEIGHT","UP_KEY","DOWN_KEY","PongComponent","router","pongGame","renderingContext","canvas","displayCanvas","setInterval","progress","t","b","l","r","navigateByUrl","font","fillText","fillStyle","fillRect","bounds","batObj","getWidth","getHeight","ballObj","window","requestAnimationFrame","event","keyCode","player","target","setHeight","playerChanged","restartGame","TetrisComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n   templateUrl: './app.component.html',\n  // template: '<app-tetris></app-tetris>',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-pong-game';\n}\n","<!-- <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark \">\n  <a class=\"navbar-brand\" href=\"#\" routerLink=\"/\">§ <b>Sivaji Kondapalli</b> §</a>\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\" routerLink=\"/cv\">CV <span class=\"sr-only\">(current)</span></a>\n      </li>\n\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n          aria-haspopup=\"true\" aria-expanded=\"false\">\n          Angular Games\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/pong-game\" routerLinkActive=\"active\">Pong Game</a>\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/number-slider-game\">Number Slider Game</a>\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/image-slider-game\">Image Slider Game</a>\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/tetris-game\">Tetris Game</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet> -->\n\n<app-image-slider></app-image-slider> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PongComponent } from './pong/pong.component';\nimport { TetrisComponent } from './tetris/tetris.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ImageSliderComponent } from './image-slider/image-slider.component';\n\nimport '../../node_modules/bootstrap/dist/js/bootstrap.bundle';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { CvComponent } from './cv/cv.component';\nimport { NumberSliderComponent } from './number-slider/number-slider.component';\n\nconst appRoutes: Routes = [\n  { path: 'pong-game', component: PongComponent },\n  { path: 'tetris-game', component: TetrisComponent },\n  { path: 'image-slider-game', component: ImageSliderComponent },\n  { path: 'number-slider-game', component: NumberSliderComponent },\n  { path: 'cv', component: CvComponent },\n  { path: '**', component: HomepageComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PongComponent,\n    TetrisComponent,\n    ImageSliderComponent,\n    HomepageComponent,\n    CvComponent,\n    NumberSliderComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // <-- debugging purposes only\n    )    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Cell {\n    constructor(public row: number, public col: number, public value: string, show: boolean) { }\n  }","import { Movable } from './Movable';\nimport { LocationOnCanvas } from './Location';\nimport { Speed } from './Speed';\n\nexport class Ball extends Movable {\n    private speed: Speed;\n\n    constructor(width: number, height: number, location: LocationOnCanvas, moveIncrement: number, speed: Speed) {\n        super(width, height, location, moveIncrement);\n        this.speed = speed;\n    }\n\n    goOppToCurrentX(): void {\n        this.speed.horiSpeedSprintValue = -this.speed.horiSpeedSprintValue;\n    }\n\n    goOppToCurrentY(): void {\n        this.speed.vertSpeedSprintValue = -this.speed.vertSpeedSprintValue;\n    }\n\n    setNewSpeed(speedVal: number): void {\n        this.speed.vertSpeedSprintValue = speedVal;\n    }\n\n    move() {\n        super.move(this.speed);\n    }\n}","import { Movable } from './Movable';\nimport { LocationOnCanvas } from './Location';\nimport { Speed } from './Speed';\n\nexport class Bat extends Movable {\n    private speed: Speed;\n\n    constructor(width: number, height: number, location: LocationOnCanvas, moveIncrement: number) {\n        super(width, height, location, moveIncrement);\n        this.speed = new Speed(0, 0);\n    }\n\n    goDown(ratioChange: number) {\n        if (ratioChange < 0 || ratioChange > 1) return;\n        this.speed.vertSpeedSprintValue = Math.min(1, this.speed.vertSpeedSprintValue + ratioChange);\n    }\n\n    goUp(ratioChange: number) {\n        if (ratioChange < 0 || ratioChange > 1) return;\n        this.speed.vertSpeedSprintValue = Math.max(-1, this.speed.vertSpeedSprintValue - ratioChange);\n    }\n\n    move() {\n        super.move(this.speed);\n    }\n}","import { LocationOnCanvas } from './Location';\nimport { Speed } from './Speed';\nimport { Boundaries } from './Boundaries';\n\nexport abstract class Movable {\n    private width: number;\n    private height: number;\n    private location: LocationOnCanvas;\n    private moveIncrement: number;\n\n    constructor(width: number, height: number, location: LocationOnCanvas, moveIncrement: number) {\n        this.width = width;\n        this.height = height;\n        this.location = location;\n        this.moveIncrement = moveIncrement;\n    }\n\n    public move(speed: Speed) {\n        this.location.xCoOrd += (this.moveIncrement * speed.horiSpeedSprintValue);\n        this.location.yCoOrd += (this.moveIncrement * speed.vertSpeedSprintValue);\n    }\n\n    public getLocationOnCanvas(): LocationOnCanvas {\n        return this.location;\n    }\n\n    public getWidth(): number {\n        return this.width;\n    }\n\n    public getHeight(): number {\n        return this.height;\n    }\n\n    public setHeight(newHeigt: number): void {\n        this.height = newHeigt;\n    }\n\n    getCollisionBoundaries(): Boundaries {\n        return {\n            left: this.location.xCoOrd - this.width / 2,\n            right: this.location.xCoOrd + this.width / 2,\n            top: this.location.yCoOrd - this.height / 2,\n            bottom: this.location.yCoOrd + this.height / 2, \n        }\n    }\n}","import { Ball } from './Ball';\nimport { Bat } from './Bat';\nimport { Boundaries } from './Boundaries';\nimport { KeysPressedState } from './KeysPressedState';\n\nexport class PongGame {\n    public ball: Ball;\n    public bat: Bat;\n\n    private width: number;\n    private height: number;\n\n    constructor(width: number, height: number) {\n        this.height = height;\n        this.width = width;\n\n        this.ball = new Ball(15, 15, { xCoOrd: width / 2, yCoOrd: height / 2 }, 2,\n            { horiSpeedSprintValue: 1, vertSpeedSprintValue: 1 });\n        this.bat = new Bat(20, 125, { xCoOrd: 20, yCoOrd: height / 2 }, 1.5);\n    }\n\n    progress(keyPressedState: KeysPressedState): Boundaries {\n        this.ball.move();\n\n        var paddleBounds = this.bat.getCollisionBoundaries();\n        if (keyPressedState.upKeyPressed && paddleBounds.top > 0) {\n            this.bat.goUp(.03);\n            this.bat.move();\n        } else if (keyPressedState.downKeyPressed && paddleBounds.bottom < this.height) {\n            this.bat.goDown(.03);\n            this.bat.move();\n        }\n        const boundaries = this.checkCollided();\n        return boundaries;\n    }\n\n    private checkCollided(): Boundaries {\n        let ballBounds = this.ball.getCollisionBoundaries();\n\n        if (ballBounds.bottom >= this.height || ballBounds.top <= 0)\n            this.ball.goOppToCurrentY();\n\n        let batBounds = this.bat.getCollisionBoundaries();\n        if (ballBounds.left <= batBounds.right &&\n            batBounds.right - ballBounds.left <= 3 &&\n            ballBounds.bottom >= batBounds.top &&\n            ballBounds.top <= batBounds.bottom) {\n\n            this.ball.goOppToCurrentX();\n\n            var vsr = - (this.ball.getLocationOnCanvas().yCoOrd - this.bat.getLocationOnCanvas().yCoOrd)\n                / (batBounds.top - this.bat.getLocationOnCanvas().yCoOrd);\n\n            vsr = Math.min(vsr, 1);\n            this.ball.setNewSpeed(vsr);\n        }\n\n        if (ballBounds.right >= this.width || ballBounds.left <= 0) {\n            this.ball.goOppToCurrentX();\n        }\n\n        return ballBounds;\n    }\n\n    gameCompleted(): boolean {\n        var ballBoundries = this.ball.getCollisionBoundaries();\n        if (ballBoundries.left <= 10) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}","export class Speed {\n    public horiSpeedSprintValue: number;\n    public vertSpeedSprintValue: number;\n\n    constructor(horiSpeedSprintValue: number, vertSpeedSprintValue: number) {\n        this.horiSpeedSprintValue = horiSpeedSprintValue;\n        this.vertSpeedSprintValue = vertSpeedSprintValue;\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cv',\n  templateUrl: './cv.component.html',\n  styleUrls: ['./cv.component.css']\n})\nexport class CvComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container card\">\n    <h5 class=\"card-header\">CV</h5>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Will be updated soon!!!</h5>\n      <a href=\"https://www.linkedin.com/in/sivajikondapalli/\" target=\"_blank\" class=\"btn btn-primary\">Linkedin</a> &nbsp;\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container card\">\n    <h5 class=\"card-header\">Welcome</h5>\n    <div class=\"card-body\">\n      <!-- <h5 class=\"card-title\">Special title treatment</h5> -->\n      <p class=\"card-text\">This page is hosted on github pages and content/games were written using \n          <span class=\"badge badge-info\">angular</span> &amp;\n          <span class=\"badge badge-info\">bootstrap</span>\n        </p>\n      <!-- <a href=\"https://angular.io/\" target=\"_blank\" class=\"btn btn-primary\">Angular</a> &nbsp;\n      <a href=\"https://getbootstrap.com/\" target=\"_blank\" class=\"btn btn-primary\">Bootstrap</a> -->\n    </div>\n  </div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nconst INITIAL_BOARD_SIZE: number = 4;\n\n@Component({\n  selector: 'app-image-slider',\n  templateUrl: './image-slider.component.html'\n})\nexport class ImageSliderComponent implements OnInit {\n  public board: any[] = [];\n  public boardDimension: number;\n  public parts = [];\n\n  @ViewChild('myCanvas') canvasElem: ElementRef;\n\n  constructor() {\n    this.boardDimension = INITIAL_BOARD_SIZE;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  // credits: https://github.com/KyrosDigital/imgsplit/blob/master/imgsplit.html\n  ngAfterViewInit(): void {\n   this.split();\n  }\n\n  split() {\n    let img = new Image();\n    img.src =  \"assets/images/angular.png\";\n\n    let ctx = this.canvasElem.nativeElement.getContext('2d');\n    \n\n    console.log(\"Width: \" + img.width);\n    console.log(\"Height: \" + img.height);\n\n    var w2 = img.width / 2;\n    var h2 = img.height / 2;\n\n    for (var i = 0; i < 4; i++) {\n      var x = (-w2 * i) % (w2 * 2);\n      var y = (h2 * i) <= h2 ? 0 : -h2;\n\n      this.canvasElem.nativeElement.width = w2;\n      this.canvasElem.nativeElement.height = h2;\n\n      ctx.drawImage(img, x, y, w2 * 2, h2 * 2);\n\n      this.parts.push(this.canvasElem.nativeElement.toDataURL());\n\n\n      var slicedImage = document.createElement('img')\n      slicedImage.src = this.parts[i];\n      var div = document.getElementById('test');\n      div.appendChild(slicedImage);\n      div.appendChild(document.createElement('hr'));\n\n    }\n    // window.requestAnimationFrame(() => this.split());\n  }\n}","<div id=\"test\"></div>\n<canvas #myCanvas width=900 height=\"600\">","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Cell } from '../classes/number-slider/cell';\n\nconst DUMMY: string = ' ';\nconst INITIAL_BOARD_SIZE: number = 4;\n\n@Component({\n  selector: 'app-number-slider',\n  templateUrl: './number-slider.component.html'\n})\nexport class NumberSliderComponent implements OnInit {\n  public board: any[] = [];\n  public boardDimension: number;\n  public totalClicks: number = 0;\n\n  @ViewChild('boardSize') boardSize: ElementRef\n\n  constructor() {\n    this.boardDimension = INITIAL_BOARD_SIZE;\n    this.fillBoard();\n  }\n\n  ngOnInit(): void {\n  }\n\n  fillBoard(): void {\n    let numberArray = new Array((this.boardDimension * this.boardDimension) - 1)\n    for (let i = 0; i < (this.boardDimension * this.boardDimension) - 1; i++) {\n      numberArray[i] = (i + 1);\n    }\n    numberArray = this.shuffle(numberArray);\n\n    let count: number = 0;\n\n    for (let i = 0; i < this.boardDimension; i++) {\n      this.board[i] = new Array(this.boardDimension);\n      for (let j = 0; j < this.boardDimension; j++) {\n        this.board[i][j] = new Cell(i, j, '' + numberArray[count++], true);\n      }\n    }\n    this.board[this.boardDimension - 1][this.boardDimension - 1].show = false;\n    this.board[this.boardDimension - 1][this.boardDimension - 1].value = DUMMY;\n  }\n\n  // credit : http://stackoverflow.com/questions/962802#962890\n  shuffle(array) {\n    var tmp, current, top = array.length;\n    if (top) {\n      while (--top) {\n        current = Math.floor(Math.random() * (top + 1));\n        tmp = array[current];\n        array[current] = array[top];\n        array[top] = tmp;\n      }\n    }\n    return array;\n  }\n\n  onCellClick(row: number, col: number): void {\n    if (this.board[row][col].value != DUMMY) {\n      let currentCellValue: number = this.board[row][col].value;\n\n      // is right cell empty?\n      if (col + 1 < this.boardDimension && this.board[row][col + 1].value === DUMMY) {\n        this.board[row][col + 1].value = currentCellValue;\n        this.board[row][col + 1].show = true;\n        this.board[row][col].value = DUMMY;\n        this.board[row][col].show = false;\n        this.totalClicks++;\n      }\n\n      // is left cell empty?\n      if (col - 1 >= 0 && this.board[row][col - 1].value === DUMMY) {\n        this.board[row][col - 1].value = currentCellValue;\n        this.board[row][col - 1].show = true;\n        this.board[row][col].value = DUMMY;\n        this.board[row][col].show = false;\n        this.totalClicks++;\n      }\n\n      // is top cell empty?\n      if (row - 1 >= 0 && this.board[row - 1][col].value === DUMMY) {\n        this.board[row - 1][col].value = currentCellValue;\n        this.board[row - 1][col].show = true;\n        this.board[row][col].value = DUMMY;\n        this.board[row][col].show = false;\n        this.totalClicks++;\n      }\n      // is bottom cell empty?\n      if (row + 1 < this.boardDimension && this.board[row + 1][col].value === DUMMY) {\n        this.board[row + 1][col].value = currentCellValue;\n        this.board[row + 1][col].show = true;\n        this.board[row][col].value = DUMMY;\n        this.board[row][col].show = false;\n        this.totalClicks++;\n      }\n    } else {\n      alert('Invalid click');\n    }\n\n    if (this.isGameCompleted()) {\n      alert('Hurray!!! You Won the Game');\n    }\n  }\n\n  hideCell(i: number, j: number) {\n    return this.board[i][j].value !== DUMMY;\n  }\n\n  isGameCompleted(): boolean {\n    let gameCompleted: boolean = true;\n    let count: number = 1;\n    for (let i = 0; i < this.boardDimension; i++) {\n      for (let j = 0; j < this.boardDimension; j++) {\n\n        if (i === this.boardDimension - 1 && j === this.boardDimension - 1) {\n          // if you reached here means all cells so far are having correct values.\n          if (this.board[i][j].value === DUMMY) {\n            return true;\n          }\n        } else {\n          // let num = (count++);\n          console.log(i + \" - \" + j + \" - \" + this.board[i][j].value);\n          if (this.board[i][j].value !== '' + (count++)) {\n            return false;\n          }\n        }\n      }\n    }\n    return gameCompleted;\n  }\n\n  boardSizeChanged(): void {\n    console.log(this.boardSize.nativeElement.value);\n    this.board = [];\n    this.boardDimension = this.boardSize.nativeElement.value;\n    this.totalClicks = 0;\n\n    this.fillBoard();\n  }\n\n}\n","<div class=\"container\" style=\"background-color:whitesmoke\">\n    <div class=\"row align-items-center\" style=\"display: flex;justify-content: center;align-items: center;\">\n        <div class=\"col-xs-3\">\n            Board Size: \n            <select (change)=\"boardSizeChanged()\" #boardSize>\n                <option value=\"2\" selected>Jodha (2 X 2)</option>\n                <option value=\"4\" selected>4 X 4</option>\n                <option value=\"6\">6 X 6</option>\n                <option value=\"8\">8 X 8</option>\n            </select>\n        </div>\n    </div>\n    <br>\n    <div class=\"row\" style=\"display: flex;justify-content: center;align-items: center;\">\n        <div class=\"col-xs-9\">\n            Total Clicks: {{ totalClicks }}\n        </div>\n    </div>\n    <div class=\"row\" *ngFor=\"let row1 of board; index as i\" style=\"display: flex;justify-content: center;align-items: center;\">\n        <div class=\"col-xs-12\" *ngFor=\"let col1 of board[i]; index as j\">\n            <button class=\"btn btn-default\" (click)=\"onCellClick(i, j)\"\n                style=\"height: 55px; width: 55px !important;text-align: center; border-radius: 25%; background-color: #5DADE2\">\n                {{ board[i][j].value }}\n            </button>\n        </div>\n    </div>\n    <br>\n    <div class=\"row\"  style=\"display: flex;justify-content: center;align-items: center;\">\n        <p>* Click on numbers to move UP / DOWN / LEFT / RIGHT to keep all numbers in the order.</p>\n    </div></div>","import { Component, OnInit, ViewChild, ElementRef, HostListener } from '@angular/core';\nimport { PongGame } from '../classes/pong/PongGame';\nimport { Boundaries } from '../classes/pong/Boundaries';\nimport { KeysPressedState } from '../classes/pong/KeysPressedState';\nimport { Router } from '@angular/router';\n\nconst ADULT_BAT_HEIGHT: number = 125;\nconst KIDS_BAT_HEIGHT: number = 325;\nconst CANVAS_WIDTH: number = 900;\nconst CANVAS_HEIGHT: number = 600;\nconst UP_KEY: number = 38;\nconst DOWN_KEY: number = 40;\n\n@Component({\n  selector: 'app-pong',\n  templateUrl: './pong.component.html'\n})\nexport class PongComponent implements OnInit {\n\n  public width: number;\n  public height: number;\n\n  public t: number; // top\n  public b: number; // bottom\n  public l: number; // left\n  public r: number; // right\n\n  @ViewChild('canvasElem') canvas: ElementRef;\n\n  /**\n   * The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D\n   * rendering context for the drawing surface of a <canvas> element. It is used for drawing \n   * shapes, text, images, and other objects.\n   */\n  private renderingContext: CanvasRenderingContext2D;\n\n  private keyPressedState: KeysPressedState;\n\n  private pongGame: PongGame;\n\n  public gameCompleted: boolean;\n\n  private router: Router;\n\n  constructor(router: Router) {\n    this.width = CANVAS_WIDTH;\n    this.height = CANVAS_HEIGHT;\n    this.keyPressedState = { upKeyPressed: false, downKeyPressed: false };\n    this.pongGame = new PongGame(this.width, this.height);\n    this.gameCompleted = false;\n\n    this.router = router;\n  }\n\n  ngOnInit(): void { }\n\n  ngAfterViewInit(): void {\n    this.renderingContext = this.canvas.nativeElement.getContext('2d');\n    this.displayCanvas();\n\n    // refresh this for every 1 milli sec\n    setInterval(() => {\n      const x = this.pongGame.progress(this.keyPressedState);\n      this.t = x.top;\n      this.b = x.bottom;\n      this.l = x.left;\n      this.r = x.right;\n    }, 1);\n  }\n\n  public restartGame(): void {\n    this.gameCompleted = false;\n    // location.href=\"/pong-game\";//();\n    this.router.navigateByUrl('/');\n  }\n\n  private displayCanvas(): void {\n    if (this.pongGame.gameCompleted()) {\n      this.renderingContext.font = \"30px Arial\";\n      this.renderingContext.fillText(\"Game Over!\", 50, 50);\n      this.gameCompleted = true;\n      return;\n    }\n\n    this.renderingContext.fillStyle = 'black';\n    this.renderingContext.fillRect(0, 0, this.width, this.height);\n\n    let bounds: Boundaries;\n\n    // Draw bat\n    this.renderingContext.fillStyle = 'red';\n    let batObj = this.pongGame.bat;\n    bounds = batObj.getCollisionBoundaries();\n    this.renderingContext.fillRect(bounds.left, bounds.top, batObj.getWidth(), batObj.getHeight());\n\n    // Draw ball\n    this.renderingContext.fillStyle = 'yellow';\n    let ballObj = this.pongGame.ball;\n    bounds = ballObj.getCollisionBoundaries();\n    this.renderingContext.fillRect(bounds.left, bounds.top, ballObj.getWidth(), ballObj.getHeight());\n\n    // Render next frame\n    window.requestAnimationFrame(() => this.displayCanvas());\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  keyLeft(event: KeyboardEvent) {\n    if (event.keyCode == UP_KEY) {\n      this.keyPressedState.upKeyPressed = true;\n    }\n    if (event.keyCode == DOWN_KEY) {\n      this.keyPressedState.downKeyPressed = true;\n    }\n  }\n\n  @HostListener('window:keyup', ['$event'])\n  keyRight(event: KeyboardEvent) {\n    if (event.keyCode == UP_KEY) {\n      this.keyPressedState.upKeyPressed = false;\n    }\n    if (event.keyCode == DOWN_KEY) {\n      this.keyPressedState.downKeyPressed = false;\n    }\n  }\n\n  playerChanged(event: any): void {\n    const player = event.target.value;\n    if (player === 'jodha') {\n      this.pongGame.bat.setHeight(KIDS_BAT_HEIGHT);\n    } else if (player === 'daddy') {\n      this.pongGame.bat.setHeight(ADULT_BAT_HEIGHT);\n    }\n  }\n}\n","<div class=\"container\">\n    <!-- <div class=\"row\" style=\"background-color: whitesmoke\">\n        <h4>\n            <a href=\"https://angular.io/\" target=\"_blank\">Angular </a> <a href=\"https://en.wikipedia.org/wiki/Pong\"\n                target=\"_blank\">Pong (single player) </a> Game - <a href=\"https://github.com/sivajik\"\n                target=\"_blank\">Sivaji\n                Kondapalli</a>\n        </h4>\n    </div>\n    \n    <div class=\"row\" style=\"background-color: whitesmoke;\">\n        <h6>\n            inspiration(s) from <a\n                href=\"https://medium.com/better-programming/fun-side-projects-that-you-can-build-today-553158597363\"\n                target=\"_blank\">Better\n                Programming</a>\n        </h6>\n    </div> -->\n\n    <div class=\"row\" style=\"background-color:whitesmoke;\">\n        <div class=\"col-xs-9\">\n            <canvas #canvasElem width=\"{{ width }}\" height=\"{{ height }}\"></canvas>\n            <!-- <p [ngStyle]=\"{'visibility' : showCoOrdinatesVal ? 'visible' : 'hidden'}\">{{ l }} _____ {{ r }} _____ {{ t }} _____ {{ b }}</p> -->\n        </div>\n        <div class=\"col-xs-3\">\n            <table class=\"table table-bordered table-sm\" widht=\"100%\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th colspan=3 scope=\"col\">Game Controls</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Player Type</td>\n                        <td>\n                            <select (change)=\"playerChanged($event)\">\n                                <option value=\"daddy\">Daddy</option>\n                                <option value=\"jodha\">Jodha</option>\n                            </select>\n                        </td>\n                    </tr>\n                    <!--<tr>\n                    <td>Speed</td>\n                    <td>\n                        <select>\n                            <option value=\"low\">Low</option>\n                            <option value=\"medium\">Medium</option>\n                            <option value=\"high\">High</option>\n                        </select>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Ball Count</td>\n                    <td>\n                        <select>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                        </select>\n                    </td>\n                </tr>\n            -->\n                </tbody>\n            </table>\n\n            &nbsp;<button class=\"btn btn-success\" [ngStyle]=\"{visibility: gameCompleted ? 'visible' : 'hidden'}\"\n                (click)=\"restartGame()\">Go Home</button>\n\n        </div>\n    </div>\n\n    <div class=\"row\" style=\"background-color:whitesmoke;\">\n        <p>* Use keyboard UP and DOWN arrows to move the paddle.</p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tetris',\n  templateUrl: './tetris.component.html'\n})\nexport class TetrisComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>work in progress!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}