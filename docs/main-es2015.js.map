{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/classes/number-slider/cell.ts","./src/app/classes/pong/Ball.ts","./src/app/classes/pong/Bat.ts","./src/app/classes/pong/Movable.ts","./src/app/classes/pong/PongGame.ts","./src/app/classes/pong/Speed.ts","./src/app/cv/cv.component.ts","./src/app/cv/cv.component.html","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/image-slider/image-slider.component.ts","./src/app/image-slider/image-slider.component.html","./src/app/number-slider/number-slider.component.ts","./src/app/number-slider/number-slider.component.html","./src/app/pong/pong.component.ts","./src/app/pong/pong.component.html","./src/app/tetris/tetris.component.ts","./src/app/tetris/tetris.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n   templateUrl: './app.component.html',\n  // template: '<app-tetris></app-tetris>',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-pong-game';\n}\n","<!-- <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark \">\n  <a class=\"navbar-brand\" href=\"#\" routerLink=\"/\">§ <b>Sivaji Kondapalli</b> §</a>\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\" routerLink=\"/cv\">CV <span class=\"sr-only\">(current)</span></a>\n      </li>\n\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n          aria-haspopup=\"true\" aria-expanded=\"false\">\n          Angular Games\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/pong-game\" routerLinkActive=\"active\">Pong Game</a>\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/number-slider-game\">Number Slider Game</a>\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/image-slider-game\">Image Slider Game</a>\n          <a class=\"dropdown-item\" href=\"#\" routerLink=\"/tetris-game\">Tetris Game</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet> -->\n\n<app-image-slider></app-image-slider> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PongComponent } from './pong/pong.component';\nimport { TetrisComponent } from './tetris/tetris.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ImageSliderComponent } from './image-slider/image-slider.component';\n\nimport '../../node_modules/bootstrap/dist/js/bootstrap.bundle';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { CvComponent } from './cv/cv.component';\nimport { NumberSliderComponent } from './number-slider/number-slider.component';\n\nconst appRoutes: Routes = [\n  { path: 'pong-game', component: PongComponent },\n  { path: 'tetris-game', component: TetrisComponent },\n  { path: 'image-slider-game', component: ImageSliderComponent },\n  { path: 'number-slider-game', component: NumberSliderComponent },\n  { path: 'cv', component: CvComponent },\n  { path: '**', component: HomepageComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PongComponent,\n    TetrisComponent,\n    ImageSliderComponent,\n    HomepageComponent,\n    CvComponent,\n    NumberSliderComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // <-- debugging purposes only\n    )    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Cell {\n    constructor(public row: number, public col: number, public value: string, show: boolean) { }\n  }","import { Movable } from './Movable';\nimport { LocationOnCanvas } from './Location';\nimport { Speed } from './Speed';\n\nexport class Ball extends Movable {\n    private speed: Speed;\n\n    constructor(width: number, height: number, location: LocationOnCanvas, moveIncrement: number, speed: Speed) {\n        super(width, height, location, moveIncrement);\n        this.speed = speed;\n    }\n\n    goOppToCurrentX(): void {\n        this.speed.horiSpeedSprintValue = -this.speed.horiSpeedSprintValue;\n    }\n\n    goOppToCurrentY(): void {\n        this.speed.vertSpeedSprintValue = -this.speed.vertSpeedSprintValue;\n    }\n\n    setNewSpeed(speedVal: number): void {\n        this.speed.vertSpeedSprintValue = speedVal;\n    }\n\n    move() {\n        super.move(this.speed);\n    }\n}","import { Movable } from './Movable';\nimport { LocationOnCanvas } from './Location';\nimport { Speed } from './Speed';\n\nexport class Bat extends Movable {\n    private speed: Speed;\n\n    constructor(width: number, height: number, location: LocationOnCanvas, moveIncrement: number) {\n        super(width, height, location, moveIncrement);\n        this.speed = new Speed(0, 0);\n    }\n\n    goDown(ratioChange: number) {\n        if (ratioChange < 0 || ratioChange > 1) return;\n        this.speed.vertSpeedSprintValue = Math.min(1, this.speed.vertSpeedSprintValue + ratioChange);\n    }\n\n    goUp(ratioChange: number) {\n        if (ratioChange < 0 || ratioChange > 1) return;\n        this.speed.vertSpeedSprintValue = Math.max(-1, this.speed.vertSpeedSprintValue - ratioChange);\n    }\n\n    move() {\n        super.move(this.speed);\n    }\n}","import { LocationOnCanvas } from './Location';\nimport { Speed } from './Speed';\nimport { Boundaries } from './Boundaries';\n\nexport abstract class Movable {\n    private width: number;\n    private height: number;\n    private location: LocationOnCanvas;\n    private moveIncrement: number;\n\n    constructor(width: number, height: number, location: LocationOnCanvas, moveIncrement: number) {\n        this.width = width;\n        this.height = height;\n        this.location = location;\n        this.moveIncrement = moveIncrement;\n    }\n\n    public move(speed: Speed) {\n        this.location.xCoOrd += (this.moveIncrement * speed.horiSpeedSprintValue);\n        this.location.yCoOrd += (this.moveIncrement * speed.vertSpeedSprintValue);\n    }\n\n    public getLocationOnCanvas(): LocationOnCanvas {\n        return this.location;\n    }\n\n    public getWidth(): number {\n        return this.width;\n    }\n\n    public getHeight(): number {\n        return this.height;\n    }\n\n    public setHeight(newHeigt: number): void {\n        this.height = newHeigt;\n    }\n\n    getCollisionBoundaries(): Boundaries {\n        return {\n            left: this.location.xCoOrd - this.width / 2,\n            right: this.location.xCoOrd + this.width / 2,\n            top: this.location.yCoOrd - this.height / 2,\n            bottom: this.location.yCoOrd + this.height / 2, \n        }\n    }\n}","import { Ball } from './Ball';\nimport { Bat } from './Bat';\nimport { Boundaries } from './Boundaries';\nimport { KeysPressedState } from './KeysPressedState';\n\nexport class PongGame {\n    public ball: Ball;\n    public bat: Bat;\n\n    private width: number;\n    private height: number;\n\n    constructor(width: number, height: number) {\n        this.height = height;\n        this.width = width;\n\n        this.ball = new Ball(15, 15, { xCoOrd: width / 2, yCoOrd: height / 2 }, 2,\n            { horiSpeedSprintValue: 1, vertSpeedSprintValue: 1 });\n        this.bat = new Bat(20, 125, { xCoOrd: 20, yCoOrd: height / 2 }, 1.5);\n    }\n\n    progress(keyPressedState: KeysPressedState): Boundaries {\n        this.ball.move();\n\n        var paddleBounds = this.bat.getCollisionBoundaries();\n        if (keyPressedState.upKeyPressed && paddleBounds.top > 0) {\n            this.bat.goUp(.03);\n            this.bat.move();\n        } else if (keyPressedState.downKeyPressed && paddleBounds.bottom < this.height) {\n            this.bat.goDown(.03);\n            this.bat.move();\n        }\n        const boundaries = this.checkCollided();\n        return boundaries;\n    }\n\n    private checkCollided(): Boundaries {\n        let ballBounds = this.ball.getCollisionBoundaries();\n\n        if (ballBounds.bottom >= this.height || ballBounds.top <= 0)\n            this.ball.goOppToCurrentY();\n\n        let batBounds = this.bat.getCollisionBoundaries();\n        if (ballBounds.left <= batBounds.right &&\n            batBounds.right - ballBounds.left <= 3 &&\n            ballBounds.bottom >= batBounds.top &&\n            ballBounds.top <= batBounds.bottom) {\n\n            this.ball.goOppToCurrentX();\n\n            var vsr = - (this.ball.getLocationOnCanvas().yCoOrd - this.bat.getLocationOnCanvas().yCoOrd)\n                / (batBounds.top - this.bat.getLocationOnCanvas().yCoOrd);\n\n            vsr = Math.min(vsr, 1);\n            this.ball.setNewSpeed(vsr);\n        }\n\n        if (ballBounds.right >= this.width || ballBounds.left <= 0) {\n            this.ball.goOppToCurrentX();\n        }\n\n        return ballBounds;\n    }\n\n    gameCompleted(): boolean {\n        var ballBoundries = this.ball.getCollisionBoundaries();\n        if (ballBoundries.left <= 10) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}","export class Speed {\n    public horiSpeedSprintValue: number;\n    public vertSpeedSprintValue: number;\n\n    constructor(horiSpeedSprintValue: number, vertSpeedSprintValue: number) {\n        this.horiSpeedSprintValue = horiSpeedSprintValue;\n        this.vertSpeedSprintValue = vertSpeedSprintValue;\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cv',\n  templateUrl: './cv.component.html',\n  styleUrls: ['./cv.component.css']\n})\nexport class CvComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container card\">\n    <h5 class=\"card-header\">CV</h5>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Will be updated soon!!!</h5>\n      <a href=\"https://www.linkedin.com/in/sivajikondapalli/\" target=\"_blank\" class=\"btn btn-primary\">Linkedin</a> &nbsp;\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container card\">\n    <h5 class=\"card-header\">Welcome</h5>\n    <div class=\"card-body\">\n      <!-- <h5 class=\"card-title\">Special title treatment</h5> -->\n      <p class=\"card-text\">This page is hosted on github pages and content/games were written using \n          <span class=\"badge badge-info\">angular</span> &amp;\n          <span class=\"badge badge-info\">bootstrap</span>\n        </p>\n      <!-- <a href=\"https://angular.io/\" target=\"_blank\" class=\"btn btn-primary\">Angular</a> &nbsp;\n      <a href=\"https://getbootstrap.com/\" target=\"_blank\" class=\"btn btn-primary\">Bootstrap</a> -->\n    </div>\n  </div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nconst INITIAL_BOARD_SIZE: number = 4;\n\n@Component({\n  selector: 'app-image-slider',\n  templateUrl: './image-slider.component.html'\n})\nexport class ImageSliderComponent implements OnInit {\n  public board: any[] = [];\n  public boardDimension: number;\n  public parts = [];\n\n  @ViewChild('myCanvas') canvasElem: ElementRef;\n\n  constructor() {\n    this.boardDimension = INITIAL_BOARD_SIZE;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  // credits: https://github.com/KyrosDigital/imgsplit/blob/master/imgsplit.html\n  ngAfterViewInit(): void {\n   this.split();\n  }\n\n  split() {\n    let img = new Image();\n    img.src =  \"assets/images/angular.png\";\n\n    let ctx = this.canvasElem.nativeElement.getContext('2d');\n    \n\n    console.log(\"Width: \" + img.width);\n    console.log(\"Height: \" + img.height);\n\n    var w2 = img.width / 2;\n    var h2 = img.height / 2;\n\n    for (var i = 0; i < 4; i++) {\n      var x = (-w2 * i) % (w2 * 2);\n      var y = (h2 * i) <= h2 ? 0 : -h2;\n\n      this.canvasElem.nativeElement.width = w2;\n      this.canvasElem.nativeElement.height = h2;\n\n      ctx.drawImage(img, x, y, w2 * 2, h2 * 2);\n\n      this.parts.push(this.canvasElem.nativeElement.toDataURL());\n\n\n      var slicedImage = document.createElement('img')\n      slicedImage.src = this.parts[i];\n      var div = document.getElementById('test');\n      div.appendChild(slicedImage);\n      div.appendChild(document.createElement('hr'));\n\n    }\n    // window.requestAnimationFrame(() => this.split());\n  }\n}","<div id=\"test\"></div>\n<canvas #myCanvas width=900 height=\"600\">","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Cell } from '../classes/number-slider/cell';\n\nconst DUMMY: string = ' ';\nconst INITIAL_BOARD_SIZE: number = 4;\n\n@Component({\n  selector: 'app-number-slider',\n  templateUrl: './number-slider.component.html'\n})\nexport class NumberSliderComponent implements OnInit {\n  public board: any[] = [];\n  public boardDimension: number;\n  public totalClicks: number = 0;\n\n  @ViewChild('boardSize') boardSize: ElementRef\n\n  constructor() {\n    this.boardDimension = INITIAL_BOARD_SIZE;\n    this.fillBoard();\n  }\n\n  ngOnInit(): void {\n  }\n\n  fillBoard(): void {\n    let numberArray = new Array((this.boardDimension * this.boardDimension) - 1)\n    for (let i = 0; i < (this.boardDimension * this.boardDimension) - 1; i++) {\n      numberArray[i] = (i + 1);\n    }\n    numberArray = this.shuffle(numberArray);\n\n    let count: number = 0;\n\n    for (let i = 0; i < this.boardDimension; i++) {\n      this.board[i] = new Array(this.boardDimension);\n      for (let j = 0; j < this.boardDimension; j++) {\n        this.board[i][j] = new Cell(i, j, '' + numberArray[count++], true);\n      }\n    }\n    this.board[this.boardDimension - 1][this.boardDimension - 1].show = false;\n    this.board[this.boardDimension - 1][this.boardDimension - 1].value = DUMMY;\n  }\n\n  // credit : http://stackoverflow.com/questions/962802#962890\n  shuffle(array) {\n    var tmp, current, top = array.length;\n    if (top) {\n      while (--top) {\n        current = Math.floor(Math.random() * (top + 1));\n        tmp = array[current];\n        array[current] = array[top];\n        array[top] = tmp;\n      }\n    }\n    return array;\n  }\n\n  onCellClick(row: number, col: number): void {\n    if (this.board[row][col].value != DUMMY) {\n      let currentCellValue: number = this.board[row][col].value;\n\n      // is right cell empty?\n      if (col + 1 < this.boardDimension && this.board[row][col + 1].value === DUMMY) {\n        this.board[row][col + 1].value = currentCellValue;\n        this.board[row][col + 1].show = true;\n        this.board[row][col].value = DUMMY;\n        this.board[row][col].show = false;\n        this.totalClicks++;\n      }\n\n      // is left cell empty?\n      if (col - 1 >= 0 && this.board[row][col - 1].value === DUMMY) {\n        this.board[row][col - 1].value = currentCellValue;\n        this.board[row][col - 1].show = true;\n        this.board[row][col].value = DUMMY;\n        this.board[row][col].show = false;\n        this.totalClicks++;\n      }\n\n      // is top cell empty?\n      if (row - 1 >= 0 && this.board[row - 1][col].value === DUMMY) {\n        this.board[row - 1][col].value = currentCellValue;\n        this.board[row - 1][col].show = true;\n        this.board[row][col].value = DUMMY;\n        this.board[row][col].show = false;\n        this.totalClicks++;\n      }\n      // is bottom cell empty?\n      if (row + 1 < this.boardDimension && this.board[row + 1][col].value === DUMMY) {\n        this.board[row + 1][col].value = currentCellValue;\n        this.board[row + 1][col].show = true;\n        this.board[row][col].value = DUMMY;\n        this.board[row][col].show = false;\n        this.totalClicks++;\n      }\n    } else {\n      alert('Invalid click');\n    }\n\n    if (this.isGameCompleted()) {\n      alert('Hurray!!! You Won the Game');\n    }\n  }\n\n  hideCell(i: number, j: number) {\n    return this.board[i][j].value !== DUMMY;\n  }\n\n  isGameCompleted(): boolean {\n    let gameCompleted: boolean = true;\n    let count: number = 1;\n    for (let i = 0; i < this.boardDimension; i++) {\n      for (let j = 0; j < this.boardDimension; j++) {\n\n        if (i === this.boardDimension - 1 && j === this.boardDimension - 1) {\n          // if you reached here means all cells so far are having correct values.\n          if (this.board[i][j].value === DUMMY) {\n            return true;\n          }\n        } else {\n          // let num = (count++);\n          console.log(i + \" - \" + j + \" - \" + this.board[i][j].value);\n          if (this.board[i][j].value !== '' + (count++)) {\n            return false;\n          }\n        }\n      }\n    }\n    return gameCompleted;\n  }\n\n  boardSizeChanged(): void {\n    console.log(this.boardSize.nativeElement.value);\n    this.board = [];\n    this.boardDimension = this.boardSize.nativeElement.value;\n    this.totalClicks = 0;\n\n    this.fillBoard();\n  }\n\n}\n","<div class=\"container\" style=\"background-color:whitesmoke\">\n    <div class=\"row align-items-center\" style=\"display: flex;justify-content: center;align-items: center;\">\n        <div class=\"col-xs-3\">\n            Board Size: \n            <select (change)=\"boardSizeChanged()\" #boardSize>\n                <option value=\"2\" selected>Jodha (2 X 2)</option>\n                <option value=\"4\" selected>4 X 4</option>\n                <option value=\"6\">6 X 6</option>\n                <option value=\"8\">8 X 8</option>\n            </select>\n        </div>\n    </div>\n    <br>\n    <div class=\"row\" style=\"display: flex;justify-content: center;align-items: center;\">\n        <div class=\"col-xs-9\">\n            Total Clicks: {{ totalClicks }}\n        </div>\n    </div>\n    <div class=\"row\" *ngFor=\"let row1 of board; index as i\" style=\"display: flex;justify-content: center;align-items: center;\">\n        <div class=\"col-xs-12\" *ngFor=\"let col1 of board[i]; index as j\">\n            <button class=\"btn btn-default\" (click)=\"onCellClick(i, j)\"\n                style=\"height: 55px; width: 55px !important;text-align: center; border-radius: 25%; background-color: #5DADE2\">\n                {{ board[i][j].value }}\n            </button>\n        </div>\n    </div>\n    <br>\n    <div class=\"row\"  style=\"display: flex;justify-content: center;align-items: center;\">\n        <p>* Click on numbers to move UP / DOWN / LEFT / RIGHT to keep all numbers in the order.</p>\n    </div></div>","import { Component, OnInit, ViewChild, ElementRef, HostListener } from '@angular/core';\nimport { PongGame } from '../classes/pong/PongGame';\nimport { Boundaries } from '../classes/pong/Boundaries';\nimport { KeysPressedState } from '../classes/pong/KeysPressedState';\nimport { Router } from '@angular/router';\n\nconst ADULT_BAT_HEIGHT: number = 125;\nconst KIDS_BAT_HEIGHT: number = 325;\nconst CANVAS_WIDTH: number = 900;\nconst CANVAS_HEIGHT: number = 600;\nconst UP_KEY: number = 38;\nconst DOWN_KEY: number = 40;\n\n@Component({\n  selector: 'app-pong',\n  templateUrl: './pong.component.html'\n})\nexport class PongComponent implements OnInit {\n\n  public width: number;\n  public height: number;\n\n  public t: number; // top\n  public b: number; // bottom\n  public l: number; // left\n  public r: number; // right\n\n  @ViewChild('canvasElem') canvas: ElementRef;\n\n  /**\n   * The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D\n   * rendering context for the drawing surface of a <canvas> element. It is used for drawing \n   * shapes, text, images, and other objects.\n   */\n  private renderingContext: CanvasRenderingContext2D;\n\n  private keyPressedState: KeysPressedState;\n\n  private pongGame: PongGame;\n\n  public gameCompleted: boolean;\n\n  private router: Router;\n\n  constructor(router: Router) {\n    this.width = CANVAS_WIDTH;\n    this.height = CANVAS_HEIGHT;\n    this.keyPressedState = { upKeyPressed: false, downKeyPressed: false };\n    this.pongGame = new PongGame(this.width, this.height);\n    this.gameCompleted = false;\n\n    this.router = router;\n  }\n\n  ngOnInit(): void { }\n\n  ngAfterViewInit(): void {\n    this.renderingContext = this.canvas.nativeElement.getContext('2d');\n    this.displayCanvas();\n\n    // refresh this for every 1 milli sec\n    setInterval(() => {\n      const x = this.pongGame.progress(this.keyPressedState);\n      this.t = x.top;\n      this.b = x.bottom;\n      this.l = x.left;\n      this.r = x.right;\n    }, 1);\n  }\n\n  public restartGame(): void {\n    this.gameCompleted = false;\n    // location.href=\"/pong-game\";//();\n    this.router.navigateByUrl('/');\n  }\n\n  private displayCanvas(): void {\n    if (this.pongGame.gameCompleted()) {\n      this.renderingContext.font = \"30px Arial\";\n      this.renderingContext.fillText(\"Game Over!\", 50, 50);\n      this.gameCompleted = true;\n      return;\n    }\n\n    this.renderingContext.fillStyle = 'black';\n    this.renderingContext.fillRect(0, 0, this.width, this.height);\n\n    let bounds: Boundaries;\n\n    // Draw bat\n    this.renderingContext.fillStyle = 'red';\n    let batObj = this.pongGame.bat;\n    bounds = batObj.getCollisionBoundaries();\n    this.renderingContext.fillRect(bounds.left, bounds.top, batObj.getWidth(), batObj.getHeight());\n\n    // Draw ball\n    this.renderingContext.fillStyle = 'yellow';\n    let ballObj = this.pongGame.ball;\n    bounds = ballObj.getCollisionBoundaries();\n    this.renderingContext.fillRect(bounds.left, bounds.top, ballObj.getWidth(), ballObj.getHeight());\n\n    // Render next frame\n    window.requestAnimationFrame(() => this.displayCanvas());\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  keyLeft(event: KeyboardEvent) {\n    if (event.keyCode == UP_KEY) {\n      this.keyPressedState.upKeyPressed = true;\n    }\n    if (event.keyCode == DOWN_KEY) {\n      this.keyPressedState.downKeyPressed = true;\n    }\n  }\n\n  @HostListener('window:keyup', ['$event'])\n  keyRight(event: KeyboardEvent) {\n    if (event.keyCode == UP_KEY) {\n      this.keyPressedState.upKeyPressed = false;\n    }\n    if (event.keyCode == DOWN_KEY) {\n      this.keyPressedState.downKeyPressed = false;\n    }\n  }\n\n  playerChanged(event: any): void {\n    const player = event.target.value;\n    if (player === 'jodha') {\n      this.pongGame.bat.setHeight(KIDS_BAT_HEIGHT);\n    } else if (player === 'daddy') {\n      this.pongGame.bat.setHeight(ADULT_BAT_HEIGHT);\n    }\n  }\n}\n","<div class=\"container\">\n    <!-- <div class=\"row\" style=\"background-color: whitesmoke\">\n        <h4>\n            <a href=\"https://angular.io/\" target=\"_blank\">Angular </a> <a href=\"https://en.wikipedia.org/wiki/Pong\"\n                target=\"_blank\">Pong (single player) </a> Game - <a href=\"https://github.com/sivajik\"\n                target=\"_blank\">Sivaji\n                Kondapalli</a>\n        </h4>\n    </div>\n    \n    <div class=\"row\" style=\"background-color: whitesmoke;\">\n        <h6>\n            inspiration(s) from <a\n                href=\"https://medium.com/better-programming/fun-side-projects-that-you-can-build-today-553158597363\"\n                target=\"_blank\">Better\n                Programming</a>\n        </h6>\n    </div> -->\n\n    <div class=\"row\" style=\"background-color:whitesmoke;\">\n        <div class=\"col-xs-9\">\n            <canvas #canvasElem width=\"{{ width }}\" height=\"{{ height }}\"></canvas>\n            <!-- <p [ngStyle]=\"{'visibility' : showCoOrdinatesVal ? 'visible' : 'hidden'}\">{{ l }} _____ {{ r }} _____ {{ t }} _____ {{ b }}</p> -->\n        </div>\n        <div class=\"col-xs-3\">\n            <table class=\"table table-bordered table-sm\" widht=\"100%\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th colspan=3 scope=\"col\">Game Controls</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>Player Type</td>\n                        <td>\n                            <select (change)=\"playerChanged($event)\">\n                                <option value=\"daddy\">Daddy</option>\n                                <option value=\"jodha\">Jodha</option>\n                            </select>\n                        </td>\n                    </tr>\n                    <!--<tr>\n                    <td>Speed</td>\n                    <td>\n                        <select>\n                            <option value=\"low\">Low</option>\n                            <option value=\"medium\">Medium</option>\n                            <option value=\"high\">High</option>\n                        </select>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Ball Count</td>\n                    <td>\n                        <select>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                        </select>\n                    </td>\n                </tr>\n            -->\n                </tbody>\n            </table>\n\n            &nbsp;<button class=\"btn btn-success\" [ngStyle]=\"{visibility: gameCompleted ? 'visible' : 'hidden'}\"\n                (click)=\"restartGame()\">Go Home</button>\n\n        </div>\n    </div>\n\n    <div class=\"row\" style=\"background-color:whitesmoke;\">\n        <p>* Use keyboard UP and DOWN arrows to move the paddle.</p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tetris',\n  templateUrl: './tetris.component.html'\n})\nexport class TetrisComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>work in progress!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}